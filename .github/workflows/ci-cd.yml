name: 🚀 CI/CD - Painel Community

on:
  push:
    branches: [ develop, test ]
  pull_request:
    branches: [ develop, test ]

env:
  REGISTRY: alltomatos
  IMAGE_NAME: painel-community
  DOCKER_IMAGE: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

jobs:
  # ========================================
  # TESTES E BUILD
  # ========================================
  test-and-build:
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🟢 Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        
    - name: 📦 Install dependencies
      run: npm ci
      
    - name: 🔍 Lint code
      run: npm run lint
      
    - name: 🧪 Run tests
      run: npm test
      
    - name: 🏗️ Build application
      run: npm run build
      
    - name: 📦 Build application
      run: |
        echo "Build completed successfully!"
        echo "Application will be built on the server during deploy"
        
    - name: 📋 Save build info
      run: |
        echo "IMAGE_TAG=${{ github.sha }}" >> $GITHUB_ENV
        echo "BUILD_TIME=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_ENV

  # ========================================
  # DEPLOY TESTE
  # ========================================
  deploy-test:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/test'
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔐 Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        
    - name: 📋 Add server to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
        
    - name: 🚀 Deploy to test environment
      run: |
        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          cd /opt/painelcommunity
          
          # Clone/pull latest code
          if [ -d ".git" ]; then
            git pull origin develop
          else
            git clone https://github.com/alltomatos/painelcommunity.git .
            git checkout develop
          fi
          
          # Build Docker image locally
          docker build -t painelcommunity:latest .
          
          # Update docker-compose with local image
          sed -i "s|image:.*|image: painelcommunity:latest|" docker-compose.test.yml
          
          # Deploy to Docker Swarm
          docker stack deploy -c docker-compose.test.yml painelcommunity-test
          
          # Wait for deployment
          sleep 30
          
          # Check service status
          docker service ls | grep painelcommunity-test
          
          # Health check
          curl -f https://test.painel.alltomatos.app.br:51978/health || exit 1
        EOF
        
    - name: 📊 Deployment status
      run: |
        echo "✅ Deploy to test environment completed successfully!"
        echo "🌐 Test URL: https://test.painel.alltomatos.app.br:51978"
        echo "🐳 Image: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}"

  # ========================================
  # DEPLOY PRODUÇÃO (quando necessário)
  # ========================================
  deploy-production:
    needs: test-and-build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: production
    
    steps:
    - name: 📥 Checkout code
      uses: actions/checkout@v4
      
    - name: 🔐 Setup SSH
      uses: webfactory/ssh-agent@v0.8.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
        
    - name: 📋 Add server to known hosts
      run: |
        ssh-keyscan -H ${{ secrets.SERVER_HOST }} >> ~/.ssh/known_hosts
        
    - name: 🚀 Deploy to production
      run: |
        ssh ${{ secrets.SERVER_USER }}@${{ secrets.SERVER_HOST }} << 'EOF'
          cd /opt/painelcommunity
          
          # Clone/pull latest code
          if [ -d ".git" ]; then
            git pull origin main
          else
            git clone https://github.com/alltomatos/painelcommunity.git .
            git checkout main
          fi
          
          # Build Docker image locally
          docker build -t painelcommunity:latest .
          
          # Update docker-compose with local image
          sed -i "s|image:.*|image: painelcommunity:latest|" docker-compose.prod.yml
          
          # Deploy to Docker Swarm
          docker stack deploy -c docker-compose.prod.yml painelcommunity-prod
          
          # Wait for deployment
          sleep 30
          
          # Check service status
          docker service ls | grep painelcommunity-prod
          
          # Health check
          curl -f https://painel.alltomatos.app.br:51978/health || exit 1
        EOF
        
    - name: 📊 Production deployment status
      run: |
        echo "✅ Deploy to production completed successfully!"
        echo "🌐 Production URL: https://painel.alltomatos.app.br:51978"
        echo "🐳 Image: ${{ env.DOCKER_IMAGE }}:${{ github.sha }}"

  # ========================================
  # NOTIFICAÇÕES
  # ========================================
  notify:
    needs: [deploy-test, deploy-production]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: 📧 Send notification
      run: |
        if [ "${{ needs.deploy-test.result }}" == "success" ] || [ "${{ needs.deploy-production.result }}" == "success" ]; then
          echo "✅ Deployment successful!"
          echo "🔗 Test: https://test.painel.alltomatos.app.br:51978"
          echo "🔗 Prod: https://painel.alltomatos.app.br:51978"
        else
          echo "❌ Deployment failed!"
          exit 1
        fi 